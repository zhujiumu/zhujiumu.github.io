Sub KhanAlgorithmWithFormulasUsingCollections()
    Dim ws As Worksheet
    Dim cell As Range
    Dim dirtyCells As Collection
    Set dirtyCells = New Collection
    Dim cellKeys As Collection
    Set cellKeys = New Collection
    Dim precedentsCount As Collection
    Set precedentsCount = New Collection
    Dim cellAddresses As Collection
    Set cellAddresses = New Collection
    Dim cellPrecedents As Collection
    Set cellPrecedents = New Collection
    Dim cellsWithNoPrecedents As Collection
    Set cellsWithNoPrecedents = New Collection
    
    ' Initialize dirtyCells with cells that have formulas
    For Each ws In ThisWorkbook.Sheets
        For Each cell In ws.UsedRange
            If cell.HasFormula Then
                Dim cellAddress As String
                cellAddress = cell.Address(False, False) & "@" & ws.Name
                AddToCollection cellKeys, cellAddress, cellAddress
                AddToCollection dirtyCells, cellAddress, cell
                If Not precedentsCountExists(cellAddress, precedentsCount) Then
                    AddToCollection precedentsCount, cellAddress, 0
                End If
                SetPrecedentsAndCountUsingCollections cell, cellAddress, precedentsCount, cellPrecedents
            End If
        Next cell
    Next ws
    
    ' Initialize cells with no precedents
    Dim key As Variant
    For Each key In cellKeys
        If GetValueFromCollection(precedentsCount, key) = 0 Then
            AddToCollection cellsWithNoPrecedents, key, key
        End If
    Next key
    
    ' Process cells according to Khan's Algorithm
    Do While cellsWithNoPrecedents.Count > 0
        Dim currentKey As String
        currentKey = cellsWithNoPrecedents(1)
        cellsWithNoPrecedents.Remove 1
        
        Dim cellFollowers As Collection
        On Error Resume Next
        Set cellFollowers = cellPrecedents.Item(currentKey)
        On Error GoTo 0
        
        If Not cellFollowers Is Nothing Then
            Dim follower As Variant
            For Each follower In cellFollowers
                Dim currentCount As Integer
                currentCount = GetValueFromCollection(precedentsCount, follower)
                currentCount = currentCount - 1
                SetValueInCollection(precedentsCount, follower, currentCount)
                If currentCount = 0 Then
                    AddToCollection cellsWithNoPrecedents, follower, follower
                End If
            Next follower
        End If
        
        ' Here, you would perform actions such as recalculating the cell's value based on your specific logic
        ' This is left as an exercise for the reader, as it depends on the specific requirements of the workbook
        
    Loop
    
    MsgBox "Process completed."
End Sub

Private Sub SetPrecedentsAndCountUsingCollections(cell As Range, cellAddress As String, ByRef precedentsCount As Collection, ByRef cellPrecedents As Collection)
    On Error Resume Next
    Dim precedents As Range
    Set precedents = cell.Precedents
    If Err.Number = 0 Then
        Dim precedent As Range
        For Each precedent In precedents
            Dim precedentAddress As String
            precedentAddress = precedent.Address(False, False) & "@" & precedent.Worksheet.Name
            AddToCollection cellPrecedents, precedentAddress, cellAddress
            If precedentsCountExists(precedentAddress, precedentsCount) Then
                SetValueInCollection(precedentsCount, precedentAddress, GetValueFromCollection(precedentsCount, precedentAddress) + 1)
            Else
                AddToCollection precedentsCount, precedentAddress, 1
            End If
        Next precedent
    End If
    On Error GoTo 0
End Sub

Private Sub AddToCollection(col As Collection, key As String, item As Variant)
    On Error Resume Next
    col.Add item, key
    On Error GoTo 0
End Sub

Private Function GetValueFromCollection(col As Collection, key As String) As Variant
    On Error Resume Next
    GetValueFromCollection = col(key)
    On Error GoTo 0
End Function

Private Sub SetValueInCollection(col As Collection, key As String, newValue As Variant)
    Dim i As Long
    For i = 1 To col.Count
        If col(i) = key Then
            col.Remove i
            col.Add newValue, key
            Exit For
        End If
    Next i
End Sub

Private Function precedentsCountExists(key As String, ByRef precedentsCount As Collection) As Boolean
    On Error Resume Next
    Dim val As Variant
    val = precedentsCount(key)
    precedentsCountExists = (Err.Number = 0)
    On Error GoTo 0
End Function
